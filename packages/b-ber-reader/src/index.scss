// sass-lint:disable no-important,nesting-depth
$white: rgba(255, 255, 255, 1);
$black: rgba(34, 34, 34, 1);
$blue: rgba(105, 105, 252, 1);
$violet: rgba(80, 80, 197, 1);
$grey-light: rgba(211, 211, 211, 1);

$small: 35px;
$medium: 47px;

$transition-speed-slow: 300ms;
$transition-speed-normal: 200ms;
$transition-speed-fast: 100ms;
$transition-easing: ease;

$anmiation-speed-normal: 250ms;
$anmiation-speed-slow: 2500ms;

// The following media queries should be kept in sync with constants in
// src/constants.js

// Max. supported 'mobile' size (iPhone XS/R); Only applies to menu, so not used
// in constants.js
$mobile-breakpoint-max: 414px;
$tablet-breakpoint-max: 768px;

$font-family-serif: Georgia, 'Iowan', Times, serif;
$font-size-serif: 14px;

$font-family-sans: Arial, Helvetica, sans-serif;
$font-size-sans: 0.8rem;

$spinner-size: 40px;

// @mixin transition(
//   $property,
//   $speed: $transition-speed-fast,
//   $easing: $transition-easing
// ) {
//   transition: $property $speed $easing;
// }

// Usage:   @include transition(width, height 0.3s ease-in-out);
// Output:  transition(width 0.2s, height 0.3s ease-in-out);
//
// Pass in any number of transitions
@mixin transition($transitions...) {
  $unfoldedTransitions: ();
  @each $transition in $transitions {
    $unfoldedTransitions: append(
      $unfoldedTransitions,
      unfoldTransition($transition),
      comma
    );
  }

  transition: $unfoldedTransitions;
}

@function unfoldTransition($transition) {
  // Default values
  $property: all;
  $duration: $transition-speed-fast;
  $easing: $transition-easing; // Browser default is ease, which is what we want
  $delay: null; // Browser default is 0, which is what we want
  $defaultProperties: ($property, $duration, $easing, $delay);

  // Grab transition properties if they exist
  $unfoldedTransition: ();
  @for $i from 1 through length($defaultProperties) {
    $p: null;
    @if $i <= length($transition) {
      $p: nth($transition, $i);
    } @else {
      $p: nth($defaultProperties, $i);
    }
    $unfoldedTransition: append($unfoldedTransition, $p);
  }

  @return $unfoldedTransition;
}

@mixin border($position: '', $color: $grey-light) {
  @if $position != '' {
    border-#{$position}: 1px solid $color;
  } @else {
    border: 1px solid $color;
  }
}

// Icons
@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url('~material-design-icons/iconfont/MaterialIcons-Regular.eot?#iefix')
      format('embedded-opentype'),
    local('Material Icons'), local('MaterialIcons-Regular'),
    url('~material-design-icons/iconfont/MaterialIcons-Regular.woff2')
      format('woff2'),
    url('~material-design-icons/iconfont/MaterialIcons-Regular.woff')
      format('woff'),
    url('~material-design-icons/iconfont/MaterialIcons-Regular.ttf')
      format('truetype');
}

// https://github.com/tobiasahlin/SpinKit/blob/master/examples/5-pulse.html
@keyframes pulse {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

@keyframes nav__button__downloads__shadow {
  5% {
    text-shadow: 0 0 5px rgba($blue, 1);
  }
  35% {
    text-shadow: 0 5px 10px rgba($blue, 0.5);
  }
  100% {
    text-shadow: 0 10px 30px rgba($blue, 0);
  }
}

@keyframes nav__button__downloads__color {
  0% {
    color: $black;
  }
  25% {
    color: $violet;
  }
  100% {
    color: $black;
  }
}

* {
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style: none;
}

a,
button {
  cursor: pointer;
}

button {
  appearance: none;
  background: transparent;
  border: 0;
  display: block;
  outline: none;
}

.footnote__body {
  visibility: visible;
  display: block;
  background: $white;
  padding-left: 1.5em;
  padding-right: 1.5em;
  position: absolute;
  font-size: $font-size-serif;
  line-height: 1.6;
  z-index: 1000;

  &.footnote__body--hidden {
    visibility: hidden;
  }
}

// .footnote__content {}

.footnote__content--count {
  padding-right: 10px;
}

.material-icons {
  display: inline-block;
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 20px;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  -webkit-font-smoothing: antialiased; // sass-lint:disable-line no-vendor-prefixes
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale; // sass-lint:disable-line no-vendor-prefixes
  font-feature-settings: 'liga';
}

// UI
.controls,
.controls * {
  box-sizing: border-box;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased; // sass-lint:disable-line no-vendor-prefixes
  -moz-osx-font-smoothing: grayscale; // sass-lint:disable-line no-vendor-prefixes
}

.controls__header {
  @include border('bottom');
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background: $white;
  height: $small;
  opacity: 1 !important;

  nav ul {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    height: $small;
    padding: 0 10px;

    li {
      display: flex;
      min-width: 25px;

      &:nth-child(2) {
        flex: 1;
      }

      &:nth-child(3) {
        display: none;
      }

      .nav__button {
        @include transition(color);
        padding: 0 5px;

        &:hover {
          color: $violet;
        }

        &.nav__button__downloads {
          color: $black;
          animation: nav__button__downloads__shadow $anmiation-speed-slow
              infinite,
            nav__button__downloads__color $anmiation-speed-slow infinite;

          &:hover {
            animation: none;
            color: $violet;
          }
        }
      }
    }
  }
}

.controls__sidebar {
  z-index: 1;
  font-family: $font-family-serif;
  font-weight: 400;
  font-size: $font-size-serif;

  ol,
  ul,
  dl {
    li {
      a,
      button {
        @include border('bottom');
        text-align: left;
        display: block;
        width: 100%;
        padding: calc(#{$medium} / 2);
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        font-size: $font-size-serif;
        font-family: $font-family-serif;

        &:hover {
          @include transition(color);
          color: $violet;
        }

        &.material-icons {
          font-family: 'Material Icons';
          text-align: right;
          font-size: 20px;
        }

        &.chapter--current {
          font-weight: 700;
        }

        @for $i from 1 through 10 {
          &.indent--#{$i} {
            text-indent: ($i - 1) * ($small / 2);
          }
        }
      }

      ol,
      li,
      dl {
        a {
          text-indent: $medium;
        }
      }
    }

    dt {
      padding: calc(#{$medium} / 2) 0 0 calc(#{$small} / 2);
      text-transform: capitalize;
    }

    dd {
      @include border('bottom');
      padding: 5px calc(#{$small} / 2) calc(#{$medium} / 2);
    }

    li,
    dt {
      a {
        @include transition(color);
        text-decoration: none;
        color: $black;

        &:hover {
          color: $violet;
        }
      }
    }
  }
}

.controls__sidebar__chapters {
  @include transition(transform, $transition-speed-slow);
  @include border('right');
  position: fixed;
  z-index: 2;
  top: $small;
  height: calc(100vh - #{$small});
  width: calc(#{$small} * 10);
  background: $white;
  transform: translateX(-100%);
  overflow: auto;
  -webkit-overflow-scrolling: touch; // sass-lint:disable-line no-vendor-prefixes

  @media screen and (max-width: $mobile-breakpoint-max) {
    width: 100% !important;
  }

  &.controls__sidebar__chapters--open {
    transform: translateX(0);
  }
}

.controls__sidebar__metadata,
.controls__sidebar__downloads,
.controls__sidebar__settings {
  @include transition(transform, $transition-speed-slow);
  @include border('left');
  position: fixed;
  z-index: 2;
  top: $small;
  right: 0;
  height: 100vh;
  background: $white;
  width: calc(#{$small} * 10);
  transform: translateX(100%);
  overflow: auto;
  -webkit-overflow-scrolling: touch; // sass-lint:disable-line no-vendor-prefixes

  @media screen and (max-width: $mobile-breakpoint-max) {
    width: 100% !important;
  }

  &.controls__sidebar__metadata--open,
  &.controls__sidebar__downloads--open,
  &.controls__sidebar__settings--open {
    transform: translateX(0);

    label {
      font-weight: bold;
    }

    .settings__item__button-group {
      margin: 10px 0;

      .grid__input {
        @include border;
        display: inline-block;
        margin-left: 5px;
        padding: 2px;
      }

      .grid__input:hover {
        @include border($color: $black);
        background: $grey-light;
      }
    }
  }
}

.controls__sidebar__downloads {
  height: auto !important;
  padding-bottom: 0 !important;

  ul li {
    display: flex;
  }

  li {
    position: relative;
  }

  button {
    padding-right: calc(#{$small} / 2);
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
  }

  a {
    position: relative;
    z-index: 1;
    &:hover + button {
      color: $violet;
    }
  }
  .downloads__title,
  .downloads__description {
    display: block;
  }
  .downloads__description {
    display: block;
    font-size: 0.7rem;
    font-style: italic;
    padding-top: 6px;
  }
}

.controls__footer {
  z-index: 1;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  background: transparent;
  height: $small + 25px;
  opacity: 1 !important;

  @media screen and (max-width: $tablet-breakpoint-max) {
    background: $white;
  }

  nav ul {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    height: $small + 25px;
    padding: 0 10px;

    li {
      display: flex;

      &:nth-child(2) {
        flex: 1;
      }

      &:nth-child(2),
      &:nth-child(3) {
        button {
          font-size: 2em;
        }
      }

      .nav__button {
        @include transition(color);
        padding: 0 5px;

        &:hover {
          color: $violet;
        }
      }
    }
  }
}

.spinner {
  width: 100vw;
  height: 100vh;
  position: fixed;
  display: none;
  background: $white;
}

.spinner--visible {
  display: block;
}

.spinner__detail {
  position: absolute;
  top: calc(50% - #{$spinner-size});
  left: calc(50% - #{$spinner-size});
  width: $spinner-size;
  height: $spinner-size;
  margin: 0;
  padding: 0;
  background-color: $black;
  border-radius: 100%;
  animation: pulse 1s infinite ease-in-out;
}

.leaf {
  position: fixed;
  top: 0;
  height: 100vh;
  z-index: 10;
  background-color: $white;

  &.leaf--left {
    left: 0;
  }

  &.leaf--right {
    right: 0;
  }
}

// Debug
.grid__debug {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100%;
  pointer-events: none;
  .grid__debug__line {
    background-color: #6495ed;
    opacity: 0.4;
    position: absolute;
    top: 0;
    bottom: 0;
    width: 1px;
    color: #fff;
    padding-top: 50px;
    text-align: center;
  }
}

@media print {
  .controls__header,
  .controls__footer,
  .leaf {
    display: none !important;
  }
  #frame {
    position: static !important;
    overflow: visible !important;
    #layout {
      transform: none !important;
      height: auto !important;
      width: auto !important;
      columns: unset !important;
    }
  }
}

// Vimeo directive
// TODO Wrapper element has inline `overflow` style
[data-vimeo-initialized] {
  overflow: unset !important;
}

// Vimeo poster image
.poster--vimeo {
  @include transition(opacity, $transition-speed-normal);
  z-index: 1 !important;
  opacity: 0;

  &.controls {
    pointer-events: none;
  }

  &.visible {
    pointer-events: initial !important;
    opacity: 1;
  }
}

// Media controls
$media-element-padding: 6px;

// Vars for range input
$track-w: 100%;
$track-h: 2px;
$thumb-d: 12px;
$track-c: #d7d7d7;
$thumb-c: #272727;

.media__controls {
  display: flex;
  align-items: center;

  font-size: $font-size-sans;
  font-family: $font-family-sans;

  border: 1px solid $thumb-c;
  border-radius: $media-element-padding;
  padding: 9px 3px 9px 12px;

  a,
  input:not([type='range']),
  button {
    padding-right: $media-element-padding * 2;
  }

  .media__time {
    display: flex;
    padding: 0 $media-element-padding * 2 0 0;
    font-size: 14px;
    user-select: none;
  }

  a,
  button {
    text-decoration: none !important;
    transition: color $transition-speed-normal $transition-easing;
  }

  a.hover,
  a:hover,
  button.hover,
  button:hover {
    color: $violet !important;
  }

  + .caption__audio {
    margin-top: 0.5rem;
  }
}

.slider__volume {
  width: 0;
  flex-grow: 0;
  overflow: hidden;
  transition: flex-grow $transition-speed-normal $transition-easing;
  &.open {
    overflow: visible;
    flex-grow: 1;
  }
}

// Range input
// https://css-tricks.com/sliding-nightmare-understanding-range-input/

@mixin track {
  box-sizing: border-box;
  border: none;
  width: $track-w;
  height: $track-h;
  background: $track-c;
}

@mixin thumb {
  box-sizing: border-box;
  position: relative;
  z-index: 1;
  border: none;
  width: $thumb-d;
  height: $thumb-d;
  border-radius: 50%;
  background-color: $thumb-c;

  transition: background-color $transition-speed-normal $transition-easing;

  &:hover {
    background-color: $violet;
  }
}

.media__slider {
  flex: 1;
  display: flex;
  align-items: center;
  position: relative;

  font: 1em/1 arial, sans-serif;
  margin: 6px 15px 6px 3px;
}

input[type='range'] {
  &,
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
  }

  flex: 1;
  margin: 0;
  padding: 0;
  min-height: $thumb-d;
  background: transparent;
  font: inherit;
  outline: none;
  width: 100%;
  max-width: 100%;

  &::-webkit-slider-runnable-track {
    @include track;
  }
  &::-moz-range-track {
    @include track;
  }
  &::-ms-track {
    @include track;
  }

  &::-webkit-slider-thumb {
    margin-top: 0.5 * ($track-h - $thumb-d);
    @include thumb;
  }
  &::-moz-range-thumb {
    @include thumb;
  }
  &::-ms-thumb {
    margin-top: 0;
    @include thumb;
  }

  &::-ms-tooltip {
    display: none;
  }
}

.media__slider--before {
  background: $black;
  height: $track-h;
  position: absolute;
  left: 0;
  z-index: 0;
  pointer-events: none;
}

// Mobile layout
.media__stacked {
  width: 100%;
  display: flex;
  flex-wrap: wrap;

  .media__stacked__row {
    display: flex;
    flex: 1 0 100%;
    align-items: center;
    padding-right: $media-element-padding;
  }

  .media__stacked__separator {
    position: relative;
    width: calc(100% + 10px);
    margin-left: -13px;
    margin-top: $media-element-padding * 1.5;
    margin-bottom: $media-element-padding * 1.5;
    .media__stacked__separator--line {
      width: calc(100% + 7px); // Optics
      background: $black;
      height: 1px;
    }
  }
}

.button__media__playback-rate {
  position: relative;
  top: 1px;

  font-size: 0.7rem;
  font-weight: 700;
  font-variation-settings: 'wght' 700;
  letter-spacing: 0.035em;

  width: 33px;
}

.times__media__playback-rate {
  position: relative;
  top: 1px;
}

// Buttons
.media__button__play,
.media__button__pause {
  font-size: 24px;
}

.media__button__volume_up,
.media__button__file_download {
  font-size: 17px;
}

.media__button__file_download {
  position: relative;
  top: 1px;
}

.media__button__forward_30,
.media__button__replay_30 {
  font-size: 18px;
}

// FF for range slider
:-moz-ui-invalid {
  box-shadow: none;
}
